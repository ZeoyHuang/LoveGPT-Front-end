{"ast":null,"code":"var _jsxFileName = \"F:\\\\Flagcamp\\\\LoveGPT04\\\\LoveGPT04\\\\src\\\\chatroom\\\\components\\\\room.js\",\n  _s = $RefreshSig$();\nimport { MenuFoldOutlined, MenuUnfoldOutlined, UploadOutlined, UserOutlined, VideoCameraOutlined, LogoutOutlined } from \"@ant-design/icons\";\nimport { Button, Layout, Menu, Input, Dropdown, Tooltip } from \"antd\";\nimport \"../css/Page3.css\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content,\n  Footer,\n  Sider\n} = Layout;\nfunction getItem(label, key, children, type) {\n  return {\n    children,\n    label,\n    type,\n    key\n  };\n}\n\n/////////////////////////////////////////////\n//simulate get chatHistory from backend\n\nconst chatHistory = [{\n  conversation_id: 1,\n  message_list: [{\n    content: \"your favorite movie\",\n    update_time: \"8/7/2023\",\n    sender: \"userId\"\n  }]\n}, {\n  conversation_id: 2,\n  message_list: [{\n    content: \"your favorite music\",\n    update_time: \"8/6/2023\",\n    sender: \"userId\"\n  }]\n}];\n\n/////////////////////////////////////////////\n//simulate get chatGPTresponse from backend\nconst chatGPTresponse = [{\n  message: \"just take a bubble bath and have a good sleep\"\n}];\nfunction MenuComponent({\n  chatHistory\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parent-container\",\n      style: {\n        position: \"absolute\",\n        left: \"20px\"\n      },\n      children: [\"Previous Chat\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child-div\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: chatHistory.map((conversation, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(MenuItem, {\n              messageList: conversation.message_list\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c = MenuComponent;\nfunction MenuItem({\n  messageList\n}) {\n  var _messageList$;\n  const firstFewWords = (_messageList$ = messageList[0]) !== null && _messageList$ !== void 0 && _messageList$.content ? messageList[0].content.split(\" \").slice(0, 5).join(\" \") : \"No messages\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: firstFewWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_c2 = MenuItem;\nconst handleLogout = () => {\n  alert(\"Logout!\");\n};\nconst menu = /*#__PURE__*/_jsxDEV(Menu, {\n  children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n    icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 30\n    }, this),\n    children: \"Profile\"\n  }, \"1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Menu.Divider, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n    icon: /*#__PURE__*/_jsxDEV(LogoutOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 30\n    }, this),\n    onClick: handleLogout,\n    children: \"Logout\"\n  }, \"2\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 100,\n  columnNumber: 3\n}, this);\nfunction Page3() {\n  _s();\n  const history = useNavigate();\n  const containerStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"10vh\" // Adjust this to set the container height\n  };\n\n  const buttonStyle = {\n    /* Add any styling you want for the button here */\n    //backgroundColor: \"#007bff\",\n    \":hover\": {\n      backgroundColor: \"#007bff\"\n    }\n  };\n  const handleClick = () => {\n    alert(\"Button Clicked!\");\n  };\n  const [current, setCurrent] = useState(\"1\");\n  const [inputText, setInputText] = useState(\"\");\n  const [copiedMessage, setCopiedMessage] = useState([]);\n  const [newLabel, setNewLabel] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [oldChat, setOldChat] = useState([]);\n  const chatContentRef = useRef(null);\n  const chatReceived = chatGPTresponse.map(chat => chat.message).join(\"\");\n  const onClick = e => {\n    //console.log(\"click \", e);\n    setCurrent(e.key);\n  };\n  const [collapsed, setCollapsed] = useState(false);\n\n  // const handleInput = (e) => {\n  //   setInputText(e.target.value);\n  // };\n\n  const handleInput = e => {\n    setInputText(e.target.value);\n    console.log(\"handleinput\", inputText);\n  };\n  // useEffect(() => {\n  //   // This code will run whenever 'copiedMessage' state changes\n  //   console.log(\"input changed:\", inputText);\n  //\n  // }, [inputText]);\n\n  const handleCopyMessage = () => {\n    if (inputText) {\n      const newMessage = {\n        content: inputText,\n        type: \"sent\"\n      };\n      setCopiedMessage([...copiedMessage, newMessage]);\n\n      // Simulate the received message\n      const receivedMessage = {\n        content: chatReceived,\n        type: \"received\"\n      };\n      const updateMessage = [...copiedMessage, newMessage, receivedMessage];\n      setCopiedMessage(updateMessage);\n      console.log(\"copiedmsg in handleCopy\", copiedMessage);\n      setInputText(\"\");\n      console.log(\"items in handleCopy\", items);\n      handleTitleUpdate(updateMessage);\n    }\n  };\n  useEffect(() => {\n    // This code will run whenever 'copiedMessage' state changes\n  }, [copiedMessage]); // Specify 'copiedMessage' as a dependency\n\n  //update menu title with chat window content\n\n  const handleTitleUpdate = updateMessage => {\n    // Create a new array of items with the updated label\n    console.log(\"check msg before titleUpdate\", updateMessage);\n    let displayLabel = \"\";\n    if (updateMessage.length > 0 && updateMessage[0].content) {\n      displayLabel = updateMessage[0].content.split(\" \").slice(0, 3).join(\" \");\n      console.log(\"!!! displayLabel\", displayLabel);\n    }\n\n    // if (copiedMessage.length > 0 && copiedMessage[0].content) {\n    //   setNewLabel(copiedMessage[0].content.split(\" \").slice(0, 3).join(\" \"));\n    //   console.log(\"new label\", newLabel);\n    // }\n    console.log(\"((( items\", items);\n    const updatedItems = items.map(item => {\n      const updatedChildren = item.children.map(child => {\n        console.log(\"&&& child.label\", child.label);\n        if (child.label.startsWith(\"Title \")) {\n          console.log(\"???? &&&\");\n          return {\n            ...child,\n            label: displayLabel\n          };\n        }\n        return child;\n      });\n      console.log(\"result\", {\n        ...item,\n        children: updatedChildren\n      });\n      return {\n        ...item,\n        children: updatedChildren\n      };\n    });\n    setItems(updatedItems);\n  };\n\n  //new chat effect\n  const handleNewChat = () => {\n    const currentDate = new Date().toLocaleDateString();\n    //const currentDateTime = new Date().toLocaleString();\n\n    const existingDateSubsection = items.find(item => item.label === currentDate);\n    // console.log(\"existing:\", existingDateSubsection);\n    // console.log(\"existing's type:\", typeof existingDateSubsection);\n    // console.log(\"items:\", items.length);\n    // console.log(\"items type\", typeof items);\n\n    let newTitle = `Title ${items.length + 1}`;\n    let newItem = getItem(newTitle, `${currentDate}_${items.length + 1}`);\n    const updatedItems = [...items];\n    if (existingDateSubsection) {\n      newTitle = `Title ${existingDateSubsection.children.length + 1}`;\n      newItem = getItem(newTitle, `${currentDate}_${items.length + 1}_${existingDateSubsection.children.length + 1}`);\n      existingDateSubsection.children.unshift(newItem);\n    } else {\n      newTitle = `Title 1`;\n      console.log(\"newTitle\", newTitle);\n      newItem = getItem(newTitle, `${currentDate}_${items.length + 1}_1`);\n      console.log(\"newItem\", newItem);\n      console.log(\"items in handle new chat0\", items);\n      updatedItems.unshift(getItem(currentDate, `sub${updatedItems.length + 1}`, [newItem]));\n      console.log(\"updateditem in handle new chat if\", updatedItems);\n      setItems(updatedItems); //updated(newchat 1)\n      console.log(\"items in handle new chat if\", items);\n    }\n\n    //create new menu item or get expand current child\n    // if (existingDateSubsection) {\n    //   existingDateSubsection.children.unshift(newItem);\n    // } else {\n    //   updatedItems.unshift(\n    //     getItem(currentDate, `sub${updatedItems.length + 1}`, [newItem])\n    //   );\n    // }\n\n    setCopiedMessage([]);\n    setCurrent(newItem.key);\n    setItems(updatedItems); //updated(newchat 1)\n    console.log(\"items in handle new chat\", items);\n    console.log(\"current in handle new chat\", current);\n  };\n\n  // scroll to the bottom of chat content\n  const scrollToBottom = () => {\n    if (chatContentRef.current) {\n      const scrollHeight = chatContentRef.current.scrollHeight;\n      const height = chatContentRef.current.clientHeight;\n      const maxScrollTop = scrollHeight - height;\n      chatContentRef.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n  };\n  useEffect(() => {\n    // Scroll to the bottom to view a new message\n    scrollToBottom();\n  }, [copiedMessage]);\n\n  //press enter to send msg\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleCopyMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: {\n      minHeight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sider, {\n      trigger: null,\n      collapsible: true,\n      collapsed: collapsed,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: containerStyle,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: buttonStyle,\n          onClick: handleNewChat,\n          children: \"+ New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"80vh\",\n          overflowY: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          theme: \"dark\",\n          mode: \"inline\",\n          defaultOpenKeys: [\"sub1\"],\n          selectedKeys: [current],\n          style: {\n            width: 200\n          },\n          items: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuComponent, {\n          chatHistory: chatHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: \"10px\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          overlay: menu,\n          trigger: [\"click\"],\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: buttonStyle,\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"site-layout\",\n      children: [/*#__PURE__*/_jsxDEV(Content, {\n        className: \"site-layout-background\",\n        style: {\n          margin: \"24px 16px\",\n          padding: 24,\n          minHeight: 280\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-content-container\",\n          ref: chatContentRef,\n          children: copiedMessage.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${message.type === \"sent\" ? \"sent\" : \"respond\"} message text-wrapper`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-sender\",\n              children: message.type === \"sent\" ? \"User:\" : \"LoveGPT:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        style: {\n          height: 120\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input.Group, {\n          compact: true,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: \"calc(100% - 200px)\",\n              height: 32\n            },\n            value: inputText,\n            onChange: handleInput,\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Send Message\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: handleCopyMessage,\n              icon: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \">\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"loveGPT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n}\n_s(Page3, \"0iB0s4PyHqeV5vazrDvxTT8DuGg=\", false, function () {\n  return [useNavigate];\n});\n_c3 = Page3;\nexport default Page3;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MenuComponent\");\n$RefreshReg$(_c2, \"MenuItem\");\n$RefreshReg$(_c3, \"Page3\");","map":{"version":3,"names":["MenuFoldOutlined","MenuUnfoldOutlined","UploadOutlined","UserOutlined","VideoCameraOutlined","LogoutOutlined","Button","Layout","Menu","Input","Dropdown","Tooltip","React","useRef","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Header","Content","Footer","Sider","getItem","label","key","children","type","chatHistory","conversation_id","message_list","content","update_time","sender","chatGPTresponse","message","MenuComponent","className","style","position","left","map","conversation","index","MenuItem","messageList","fileName","_jsxFileName","lineNumber","columnNumber","_c","_messageList$","firstFewWords","split","slice","join","_c2","handleLogout","alert","menu","Item","icon","Divider","onClick","Page3","_s","history","containerStyle","display","justifyContent","alignItems","height","buttonStyle","backgroundColor","handleClick","current","setCurrent","inputText","setInputText","copiedMessage","setCopiedMessage","newLabel","setNewLabel","items","setItems","oldChat","setOldChat","chatContentRef","chatReceived","chat","e","collapsed","setCollapsed","handleInput","target","value","console","log","handleCopyMessage","newMessage","receivedMessage","updateMessage","handleTitleUpdate","displayLabel","length","updatedItems","item","updatedChildren","child","startsWith","handleNewChat","currentDate","Date","toLocaleDateString","existingDateSubsection","find","newTitle","newItem","unshift","scrollToBottom","scrollHeight","clientHeight","maxScrollTop","scrollTop","handleKeyPress","event","minHeight","trigger","collapsible","overflowY","theme","mode","defaultOpenKeys","selectedKeys","width","bottom","transform","overlay","margin","padding","ref","Group","compact","onChange","onKeyPress","title","textAlign","_c3","$RefreshReg$"],"sources":["F:/Flagcamp/LoveGPT04/LoveGPT04/src/chatroom/components/room.js"],"sourcesContent":["import {\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  UploadOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n  LogoutOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Layout, Menu, Input, Dropdown, Tooltip } from \"antd\";\nimport \"../css/Page3.css\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nconst { Header, Content, Footer, Sider } = Layout;\nfunction getItem(label, key, children, type) {\n  return {\n    children,\n    label,\n    type,\n    key,\n  };\n}\n\n/////////////////////////////////////////////\n//simulate get chatHistory from backend\n\nconst chatHistory = [\n  {\n    conversation_id: 1,\n    message_list: [\n      {\n        content: \"your favorite movie\",\n        update_time: \"8/7/2023\",\n        sender: \"userId\",\n      },\n    ],\n  },\n  {\n    conversation_id: 2,\n    message_list: [\n      {\n        content: \"your favorite music\",\n        update_time: \"8/6/2023\",\n        sender: \"userId\",\n      },\n    ],\n  },\n];\n\n/////////////////////////////////////////////\n//simulate get chatGPTresponse from backend\nconst chatGPTresponse = [\n  {\n    message: \"just take a bubble bath and have a good sleep\",\n  },\n];\n\nfunction MenuComponent({ chatHistory }) {\n  return (\n    <div>\n      <div\n        className=\"parent-container\"\n        style={{\n          position: \"absolute\",\n          left: \"20px\",\n        }}\n      >\n        Previous Chat\n        <div className=\"child-div\">\n          <ul>\n            {chatHistory.map((conversation, index) => (\n              <li key={index}>\n                <MenuItem messageList={conversation.message_list} />\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction MenuItem({ messageList }) {\n  const firstFewWords = messageList[0]?.content\n    ? messageList[0].content.split(\" \").slice(0, 5).join(\" \")\n    : \"No messages\";\n\n  return (\n    <div>\n      <p>{firstFewWords}</p>\n    </div>\n  );\n}\n\nconst handleLogout = () => {\n  alert(\"Logout!\");\n};\n\nconst menu = (\n  <Menu>\n    <Menu.Item key=\"1\" icon={<UserOutlined />}>\n      Profile\n    </Menu.Item>\n    <Menu.Divider />\n    <Menu.Item key=\"2\" icon={<LogoutOutlined />} onClick={handleLogout}>\n      Logout\n    </Menu.Item>\n  </Menu>\n);\n\nfunction Page3() {\n  const history = useNavigate();\n  const containerStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"10vh\", // Adjust this to set the container height\n  };\n\n  const buttonStyle = {\n    /* Add any styling you want for the button here */\n    //backgroundColor: \"#007bff\",\n    \":hover\": {\n      backgroundColor: \"#007bff\",\n    },\n  };\n\n  const handleClick = () => {\n    alert(\"Button Clicked!\");\n  };\n\n  const [current, setCurrent] = useState(\"1\");\n\n  const [inputText, setInputText] = useState(\"\");\n\n  const [copiedMessage, setCopiedMessage] = useState([]);\n\n  const [newLabel, setNewLabel] = useState(\"\");\n\n  const [items, setItems] = useState([]);\n\n  const [oldChat, setOldChat] = useState([]);\n\n  const chatContentRef = useRef(null);\n\n  const chatReceived = chatGPTresponse.map((chat) => chat.message).join(\"\");\n\n  const onClick = (e) => {\n    //console.log(\"click \", e);\n    setCurrent(e.key);\n  };\n\n  const [collapsed, setCollapsed] = useState(false);\n\n  // const handleInput = (e) => {\n  //   setInputText(e.target.value);\n  // };\n\n  const handleInput = (e) => {\n    setInputText(e.target.value);\n    console.log(\"handleinput\", inputText);\n  };\n  // useEffect(() => {\n  //   // This code will run whenever 'copiedMessage' state changes\n  //   console.log(\"input changed:\", inputText);\n  //\n  // }, [inputText]);\n\n  const handleCopyMessage = () => {\n    if (inputText) {\n      const newMessage = { content: inputText, type: \"sent\" };\n      setCopiedMessage([...copiedMessage, newMessage]);\n\n      // Simulate the received message\n      const receivedMessage = { content: chatReceived, type: \"received\" };\n      const updateMessage = [...copiedMessage, newMessage, receivedMessage];\n      setCopiedMessage(updateMessage);\n\n      console.log(\"copiedmsg in handleCopy\", copiedMessage);\n      setInputText(\"\");\n      console.log(\"items in handleCopy\", items);\n\n      handleTitleUpdate(updateMessage);\n    }\n  };\n\n  useEffect(() => {\n    // This code will run whenever 'copiedMessage' state changes\n  }, [copiedMessage]); // Specify 'copiedMessage' as a dependency\n\n  //update menu title with chat window content\n\n  const handleTitleUpdate = (updateMessage) => {\n    // Create a new array of items with the updated label\n    console.log(\"check msg before titleUpdate\", updateMessage);\n    let displayLabel = \"\";\n    if (updateMessage.length > 0 && updateMessage[0].content) {\n      displayLabel = updateMessage[0].content.split(\" \").slice(0, 3).join(\" \");\n      console.log(\"!!! displayLabel\", displayLabel);\n    }\n\n    // if (copiedMessage.length > 0 && copiedMessage[0].content) {\n    //   setNewLabel(copiedMessage[0].content.split(\" \").slice(0, 3).join(\" \"));\n    //   console.log(\"new label\", newLabel);\n    // }\n    console.log(\"((( items\", items);\n    const updatedItems = items.map((item) => {\n      const updatedChildren = item.children.map((child) => {\n        console.log(\"&&& child.label\", child.label);\n        if (child.label.startsWith(\"Title \")) {\n          console.log(\"???? &&&\");\n          return { ...child, label: displayLabel };\n        }\n        return child;\n      });\n      console.log(\"result\", { ...item, children: updatedChildren });\n      return { ...item, children: updatedChildren };\n    });\n\n    setItems(updatedItems);\n  };\n\n  //new chat effect\n  const handleNewChat = () => {\n    const currentDate = new Date().toLocaleDateString();\n    //const currentDateTime = new Date().toLocaleString();\n\n    const existingDateSubsection = items.find(\n      (item) => item.label === currentDate\n    );\n    // console.log(\"existing:\", existingDateSubsection);\n    // console.log(\"existing's type:\", typeof existingDateSubsection);\n    // console.log(\"items:\", items.length);\n    // console.log(\"items type\", typeof items);\n\n    let newTitle = `Title ${items.length + 1}`;\n    let newItem = getItem(newTitle, `${currentDate}_${items.length + 1}`);\n    const updatedItems = [...items];\n    if (existingDateSubsection) {\n      newTitle = `Title ${existingDateSubsection.children.length + 1}`;\n      newItem = getItem(\n        newTitle,\n        `${currentDate}_${items.length + 1}_${\n          existingDateSubsection.children.length + 1\n        }`\n      );\n      existingDateSubsection.children.unshift(newItem);\n    } else {\n      newTitle = `Title 1`;\n      console.log(\"newTitle\", newTitle);\n      newItem = getItem(newTitle, `${currentDate}_${items.length + 1}_1`);\n      console.log(\"newItem\", newItem);\n      console.log(\"items in handle new chat0\", items);\n      updatedItems.unshift(\n        getItem(currentDate, `sub${updatedItems.length + 1}`, [newItem])\n      );\n\n      console.log(\"updateditem in handle new chat if\", updatedItems);\n      setItems(updatedItems); //updated(newchat 1)\n      console.log(\"items in handle new chat if\", items);\n    }\n\n    //create new menu item or get expand current child\n    // if (existingDateSubsection) {\n    //   existingDateSubsection.children.unshift(newItem);\n    // } else {\n    //   updatedItems.unshift(\n    //     getItem(currentDate, `sub${updatedItems.length + 1}`, [newItem])\n    //   );\n    // }\n\n    setCopiedMessage([]);\n    setCurrent(newItem.key);\n    setItems(updatedItems); //updated(newchat 1)\n    console.log(\"items in handle new chat\", items);\n    console.log(\"current in handle new chat\", current);\n  };\n\n  // scroll to the bottom of chat content\n  const scrollToBottom = () => {\n    if (chatContentRef.current) {\n      const scrollHeight = chatContentRef.current.scrollHeight;\n      const height = chatContentRef.current.clientHeight;\n      const maxScrollTop = scrollHeight - height;\n      chatContentRef.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n  };\n\n  useEffect(() => {\n    // Scroll to the bottom to view a new message\n    scrollToBottom();\n  }, [copiedMessage]);\n\n  //press enter to send msg\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      handleCopyMessage();\n    }\n  };\n\n  return (\n    <Layout\n      style={{\n        minHeight: \"100vh\",\n      }}\n    >\n      {/* sidebar */}\n      <Sider trigger={null} collapsible collapsed={collapsed}>\n        {/* top */}\n        <div className=\"logo\" />\n        <div style={containerStyle}>\n          <Button style={buttonStyle} onClick={handleNewChat}>\n            + New Chat\n          </Button>\n        </div>\n\n        {/* middle, chat history */}\n        <div style={{ height: \"80vh\", overflowY: \"auto\" }}>\n          <Menu\n            theme=\"dark\"\n            mode=\"inline\"\n            defaultOpenKeys={[\"sub1\"]}\n            selectedKeys={[current]}\n            style={{\n              width: 200,\n            }}\n            items={items}\n          />\n          <MenuComponent chatHistory={chatHistory} />\n        </div>\n\n        {/* old history */}\n\n        {/* bottom */}\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"10px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n          }}\n        >\n          <Dropdown overlay={menu} trigger={[\"click\"]}>\n            <Button style={buttonStyle}>User</Button>\n          </Dropdown>\n        </div>\n      </Sider>\n\n      <Layout className=\"site-layout\">\n        {/* chat content */}\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            margin: \"24px 16px\",\n            padding: 24,\n            minHeight: 280,\n          }}\n        >\n          <div className=\"chat-content-container\" ref={chatContentRef}>\n            {copiedMessage.map((message, index) => (\n              <div\n                key={index}\n                className={`${\n                  message.type === \"sent\" ? \"sent\" : \"respond\"\n                } message text-wrapper`}\n              >\n                <div className=\"message-sender\">\n                  {message.type === \"sent\" ? \"User:\" : \"LoveGPT:\"}\n                </div>\n                <div className=\"message-content\">{message.content}</div>\n              </div>\n            ))}\n          </div>\n        </Content>\n\n        {/* message input box */}\n        <Footer style={{ height: 120 }}>\n          <Input.Group compact>\n            <Input\n              style={{\n                width: \"calc(100% - 200px)\",\n                height: 32,\n              }}\n              value={inputText}\n              onChange={handleInput}\n              onKeyPress={handleKeyPress}\n            />\n\n            <Tooltip title=\"Send Message\">\n              <Button\n                type=\"primary\"\n                onClick={handleCopyMessage}\n                icon={<span>&gt;</span>}\n              />\n            </Tooltip>\n          </Input.Group>\n          <br />\n          <p style={{ textAlign: \"center\" }}>loveGPT</p>\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n}\nexport default Page3;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}