[{"F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\index.js":"1","F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\App.js":"2","F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\reportWebVitals.js":"3","F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\chatbot\\components\\Profile.js":"4","F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\chatbot\\components\\Alexdetail.js":"5","F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\chatbot\\components\\Emilydetail.js":"6","F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\chatroom\\components\\Page3.js":"7","F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\login\\components\\Page2.js":"8","F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\login\\components\\LoginPage.js":"9","F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\login\\components\\InsLoginButton.js":"10","F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\login\\components\\GoogleLoginButton.js":"11","F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\chatroom\\components\\room.js":"12"},{"size":536,"mtime":1691925096762,"results":"13","hashOfConfig":"14"},{"size":1323,"mtime":1691894089433,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1690202697000,"results":"16","hashOfConfig":"14"},{"size":1582,"mtime":1691894221283,"results":"17","hashOfConfig":"14"},{"size":8013,"mtime":1691894221280,"results":"18","hashOfConfig":"14"},{"size":5829,"mtime":1691894221283,"results":"19","hashOfConfig":"14"},{"size":7440,"mtime":1691818120924,"results":"20","hashOfConfig":"14"},{"size":135,"mtime":1691546327000,"results":"21","hashOfConfig":"14"},{"size":2080,"mtime":1691697645481,"results":"22","hashOfConfig":"14"},{"size":854,"mtime":1691554023000,"results":"23","hashOfConfig":"14"},{"size":612,"mtime":1691546926000,"results":"24","hashOfConfig":"14"},{"size":11042,"mtime":1691893977875,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iolx4g",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\index.js",[],[],"F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\App.js",["63"],[],"F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\reportWebVitals.js",[],[],"F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\chatbot\\components\\Profile.js",[],[],"F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\chatbot\\components\\Alexdetail.js",["64"],[],"F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\chatbot\\components\\Emilydetail.js",["65"],[],"F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\chatroom\\components\\Page3.js",["66","67","68","69","70","71","72","73","74"],[],"import {\n  MenuFoldOutlined,\n  MenuUnfoldOutlined,\n  UploadOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n  LogoutOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Layout, Menu, Input, Dropdown, Tooltip } from \"antd\";\nimport \"../css/Page3.css\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nconst { Header, Content, Footer, Sider } = Layout;\nfunction getItem(label, key, children, type) {\n  return {\n    children,\n    label,\n    type,\n    key,\n  };\n}\n\nconst items = [\n  getItem(\"Today\", \"sub1\", [\n    getItem(\"Title 1\", \"1\"),\n    getItem(\"Title 2\", \"2\"),\n    getItem(\"Title 3\", \"3\"),\n    getItem(\"Title 4\", \"4\"),\n  ]),\n  getItem(\"Yesterday\", \"sub2\", [\n    getItem(\"Title 5\", \"5\"),\n    getItem(\"Title 6\", \"6\"),\n  ]),\n  getItem(\"Previous 7 days\", \"sub4\", [\n    getItem(\"Title 9\", \"9\"),\n    getItem(\"Title 10\", \"10\"),\n    getItem(\"Title 11\", \"11\"),\n    getItem(\"Title 12\", \"12\"),\n  ]),\n];\n\n//const rootSubmenuKeys = [\"sub1\", \"sub2\", \"sub4\"];\n\nconst handleLogout = () => {\n  alert(\"Logout!\");\n};\n\nconst menu = (\n  <Menu>\n    <Menu.Item key=\"1\" icon={<UserOutlined />}>\n      Profile\n    </Menu.Item>\n    <Menu.Divider />\n    <Menu.Item key=\"2\" icon={<LogoutOutlined />} onClick={handleLogout}>\n      Logout\n    </Menu.Item>\n  </Menu>\n);\n\nfunction Page3() {\n  const history = useNavigate();\n  const containerStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"10vh\", // Adjust this to set the container height\n  };\n\n  const buttonStyle = {\n    /* Add any styling you want for the button here */\n    //backgroundColor: \"#007bff\",\n    \":hover\": {\n      backgroundColor: \"#007bff\",\n    },\n  };\n\n  const handleClick = () => {\n    alert(\"Button Clicked!\");\n  };\n\n  const [current, setCurrent] = useState(\"1\");\n\n  const [inputText, setInputText] = useState(\"\");\n\n  const [copiedMessage, setCopiedMessage] = useState([]);\n\n  const [itemsData, setItemsData] = useState(items); // Renamed 'items' to 'itemsData'\n\n  const chatContentRef = useRef(null);\n\n  const onClick = (e) => {\n    //console.log(\"click \", e);\n    setCurrent(e.key);\n  };\n\n  const [collapsed, setCollapsed] = useState(false);\n\n  const handleInput = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const handleCopyMessage = () => {\n    if (inputText !== \"\") {\n      const newMessage = { content: inputText, type: \"sent\" };\n      //setCopiedMessage([...copiedMessage, newMessage]);\n\n      // Simulate the received message\n      const receivedMessage = { content: \"Received\", type: \"received\" };\n      setCopiedMessage([...copiedMessage, newMessage, receivedMessage]);\n\n      setInputText(\"\");\n    }\n  };\n\n  //new chat effect\n  const handleNewChat = () => {\n    const currentDate = new Date().toLocaleDateString();\n    const currentDateTime = new Date().toLocaleString();\n\n    const existingDateSubsection = itemsData.find(\n      (item) => item.label === currentDate\n    );\n    console.log(\"existing:\", existingDateSubsection);\n    console.log(\"existing's type:\", typeof existingDateSubsection);\n    console.log(\"items:\", itemsData.length);\n    console.log(\"items type\", typeof itemsData);\n\n    let newTitle = `Title ${items.length + 1}`;\n    let newItem = getItem(newTitle, `${currentDate}_${items.length + 1}`);\n\n    if (existingDateSubsection) {\n      newTitle = `Title ${existingDateSubsection.children.length + 1}`;\n      newItem = getItem(\n        newTitle,\n        `${currentDate}_${items.length + 1}_${\n          existingDateSubsection.children.length + 1\n        }`\n      );\n    }\n    const updatedItemsData = [...itemsData];\n\n    //create new menu item or get expand current child\n    if (existingDateSubsection) {\n      existingDateSubsection.children.unshift(newItem);\n    } else {\n      updatedItemsData.unshift(\n        getItem(currentDate, `sub${updatedItemsData.length + 1}`, [newItem])\n      );\n    }\n    setCopiedMessage([]);\n    setCurrent(newItem.key);\n    setItemsData(updatedItemsData); //updated(newchat 1)\n  };\n\n  // scroll to the bottom of chat content\n  const scrollToBottom = () => {\n    if (chatContentRef.current) {\n      const scrollHeight = chatContentRef.current.scrollHeight;\n      const height = chatContentRef.current.clientHeight;\n      const maxScrollTop = scrollHeight - height;\n      chatContentRef.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n  };\n\n  useEffect(() => {\n    // Scroll to the bottom to view a new message\n    scrollToBottom();\n  }, [copiedMessage]);\n\n  //press enter to send msg\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      handleCopyMessage();\n    }\n  };\n\n  return (\n    <Layout\n      style={{\n        minHeight: \"100vh\",\n      }}\n    >\n      {/* sidebar */}\n      <Sider trigger={null} collapsible collapsed={collapsed}>\n        {/* top */}\n        <div className=\"logo\" />\n        <div style={containerStyle}>\n          <Button style={buttonStyle} onClick={handleNewChat}>\n            + New Chat\n          </Button>\n        </div>\n\n        {/* middle, chat history */}\n        <div style={{ height: \"80vh\", overflowY: \"auto\" }}>\n          <Menu\n            theme=\"dark\"\n            onClick={onClick}\n            mode=\"inline\"\n            defaultOpenKeys={[\"sub1\"]}\n            selectedKeys={[current]}\n            style={{\n              width: 200,\n            }}\n            items={itemsData} // Changed 'items' to 'itemsData'\n          />\n        </div>\n\n        {/* bottom */}\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"10px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n          }}\n        >\n          <Dropdown menu={menu} trigger={[\"click\"]} overlayStyle={buttonStyle}>\n            <Button>User</Button>\n          </Dropdown>\n        </div>\n      </Sider>\n\n      <Layout className=\"site-layout\">\n        {/* chat content */}\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            margin: \"24px 16px\",\n            padding: 24,\n            minHeight: 280,\n          }}\n        >\n          <div className=\"chat-content-container\" ref={chatContentRef}>\n            {copiedMessage.map((message, index) => (\n              <div\n                key={index}\n                className={`${\n                  message.type === \"sent\" ? \"sent\" : \"respond\"\n                } message text-wrapper`}\n              >\n                <div className=\"message-sender\">\n                  {message.type === \"sent\" ? \"User:\" : \"LoveGPT:\"}\n                </div>\n                <div className=\"message-content\">{message.content}</div>\n              </div>\n            ))}\n          </div>\n        </Content>\n\n        {/* message input box */}\n        <Footer style={{ height: 120 }}>\n          <Input.Group compact>\n            <Input\n              style={{\n                width: \"calc(100% - 200px)\",\n                height: 32,\n              }}\n              value={inputText}\n              onChange={handleInput}\n              onKeyPress={handleKeyPress}\n            />\n\n            <Tooltip title=\"Send Message\">\n              <Button\n                type=\"primary\"\n                onClick={handleCopyMessage}\n                icon={<span>&gt;</span>}\n              />\n            </Tooltip>\n          </Input.Group>\n          <br />\n          <p style={{ textAlign: \"center\" }}>loveGPT</p>\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n}\nexport default Page3;","F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\login\\components\\Page2.js",[],[],"F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\login\\components\\LoginPage.js",[],[],"F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\login\\components\\InsLoginButton.js",[],[],"F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\login\\components\\GoogleLoginButton.js",[],[],"F:\\Flagcamp\\LoveGPT04\\LoveGPT04\\src\\chatroom\\components\\room.js",["75","76","77","78","79","80","81","82","83","84","85","86","87"],[],{"ruleId":"88","severity":1,"message":"89","line":10,"column":50,"nodeType":"90","messageId":"91","endLine":10,"endColumn":54},{"ruleId":"92","severity":1,"message":"93","line":19,"column":25,"nodeType":"94","endLine":19,"endColumn":32},{"ruleId":"92","severity":1,"message":"93","line":19,"column":13,"nodeType":"94","endLine":19,"endColumn":19},{"ruleId":"88","severity":1,"message":"95","line":2,"column":3,"nodeType":"90","messageId":"91","endLine":2,"endColumn":19},{"ruleId":"88","severity":1,"message":"96","line":3,"column":3,"nodeType":"90","messageId":"91","endLine":3,"endColumn":21},{"ruleId":"88","severity":1,"message":"97","line":4,"column":3,"nodeType":"90","messageId":"91","endLine":4,"endColumn":17},{"ruleId":"88","severity":1,"message":"98","line":6,"column":3,"nodeType":"90","messageId":"91","endLine":6,"endColumn":22},{"ruleId":"88","severity":1,"message":"99","line":14,"column":9,"nodeType":"90","messageId":"91","endLine":14,"endColumn":15},{"ruleId":"88","severity":1,"message":"100","line":62,"column":9,"nodeType":"90","messageId":"91","endLine":62,"endColumn":16},{"ruleId":"88","severity":1,"message":"101","line":78,"column":9,"nodeType":"90","messageId":"91","endLine":78,"endColumn":20},{"ruleId":"88","severity":1,"message":"102","line":97,"column":21,"nodeType":"90","messageId":"91","endLine":97,"endColumn":33},{"ruleId":"88","severity":1,"message":"103","line":119,"column":11,"nodeType":"90","messageId":"91","endLine":119,"endColumn":26},{"ruleId":"88","severity":1,"message":"95","line":2,"column":3,"nodeType":"90","messageId":"91","endLine":2,"endColumn":19},{"ruleId":"88","severity":1,"message":"96","line":3,"column":3,"nodeType":"90","messageId":"91","endLine":3,"endColumn":21},{"ruleId":"88","severity":1,"message":"97","line":4,"column":3,"nodeType":"90","messageId":"91","endLine":4,"endColumn":17},{"ruleId":"88","severity":1,"message":"98","line":6,"column":3,"nodeType":"90","messageId":"91","endLine":6,"endColumn":22},{"ruleId":"88","severity":1,"message":"99","line":14,"column":9,"nodeType":"90","messageId":"91","endLine":14,"endColumn":15},{"ruleId":"88","severity":1,"message":"100","line":112,"column":9,"nodeType":"90","messageId":"91","endLine":112,"endColumn":16},{"ruleId":"88","severity":1,"message":"101","line":128,"column":9,"nodeType":"90","messageId":"91","endLine":128,"endColumn":20},{"ruleId":"88","severity":1,"message":"104","line":138,"column":10,"nodeType":"90","messageId":"91","endLine":138,"endColumn":18},{"ruleId":"88","severity":1,"message":"105","line":138,"column":20,"nodeType":"90","messageId":"91","endLine":138,"endColumn":31},{"ruleId":"88","severity":1,"message":"106","line":142,"column":10,"nodeType":"90","messageId":"91","endLine":142,"endColumn":17},{"ruleId":"88","severity":1,"message":"107","line":142,"column":19,"nodeType":"90","messageId":"91","endLine":142,"endColumn":29},{"ruleId":"88","severity":1,"message":"108","line":148,"column":9,"nodeType":"90","messageId":"91","endLine":148,"endColumn":16},{"ruleId":"88","severity":1,"message":"102","line":153,"column":21,"nodeType":"90","messageId":"91","endLine":153,"endColumn":33},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MenuFoldOutlined' is defined but never used.","'MenuUnfoldOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'VideoCameraOutlined' is defined but never used.","'Header' is assigned a value but never used.","'history' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'setCollapsed' is assigned a value but never used.","'currentDateTime' is assigned a value but never used.","'newLabel' is assigned a value but never used.","'setNewLabel' is assigned a value but never used.","'oldChat' is assigned a value but never used.","'setOldChat' is assigned a value but never used.","'onClick' is assigned a value but never used."]